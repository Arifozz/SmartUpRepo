<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PaySelf.PS4500.RifeKeyboard">

    <!--  metallic border gradient -->
    <LinearGradientBrush x:Key="MetallicBorderBrush" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#222831" Offset="0.0" />
        <GradientStop Color="#222831" Offset="0.5" />
        <GradientStop Color="#222831" Offset="1.0" />
    </LinearGradientBrush>

    <!--  metallic radial background -->
    <RadialGradientBrush x:Key="MetallicRadialBackground" GradientOrigin="0.5,0.5" Center="0.5,0.5" RadiusX="0.8" RadiusY="0.8">
        <GradientStop Color="#FFE0E0E0" Offset="0.0" />
        <GradientStop Color="#EEEEEE" Offset="1.0" />
    </RadialGradientBrush>

    <!-- Style for generic keyboard key -->
    <Style x:Key="KeyboardKeyStyle" TargetType="{x:Type local:KeyboardKey}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="BorderBrush" Value="{StaticResource MetallicBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background" CornerRadius="15" Background="#222831" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Margin="10">
                            <Border x:Name="grdBackground" CornerRadius="15" Background="{StaticResource MetallicRadialBackground}" Margin="5" />
                        </Border>

                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}" 
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />

                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for caps lock -->
    <Style x:Key="CapsLockKeyStyle" TargetType="{x:Type local:KeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShiftedGroup">
                                <VisualState Name="NotShifted" />
                                <VisualState Name="Shifted" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CapsLockedGroup">
                                <VisualState Name="NoCapsLocked" />
                                <VisualState Name="CapsLocked">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Background" CornerRadius="15" Background="#222831" BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" Margin="10">
                            <Border x:Name="grdBackground" CornerRadius="15" Background="{StaticResource MetallicRadialBackground}" Margin="5" />
                        </Border>


                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />

                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for shift key -->
    <Style x:Key="ShiftKeyStyle" TargetType="{x:Type local:KeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ShiftedGroup">
                                <VisualState Name="NotShifted" />
                                <VisualState Name="Shifted">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="grdBackground" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#456882" />
                                        <ColorAnimation Duration="0" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" To="White" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CapsLockedGroup">
                                <VisualState Name="NoCapsLocked" />
                                <VisualState Name="CapsLocked" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>


                        <Border x:Name="Background" CornerRadius="15" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                            <Border x:Name="grdBackground" CornerRadius="15" Background="{StaticResource MetallicRadialBackground}" Margin="20" />
                        </Border>

                        <ContentPresenter
                              x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}" />

                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style Bindings -->
    <Style TargetType="{x:Type local:UnicodeKeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}" />
    <Style TargetType="{x:Type local:VirtualKeyKeyboardKey}" BasedOn="{StaticResource KeyboardKeyStyle}" />
    <Style TargetType="{x:Type local:ShiftKeyboardKey}" BasedOn="{StaticResource ShiftKeyStyle}" />
    <Style TargetType="{x:Type local:CapsKeyboardKey}" BasedOn="{StaticResource CapsLockKeyStyle}" />

    <!-- Style for keyboard wrapper -->
    <Style TargetType="{x:Type local:Keyboard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Keyboard}">
                    <Grid Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="PART_ContentPresenter" Content="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>